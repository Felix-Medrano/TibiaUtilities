<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tuTopControlBar1.OriginalImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAL4AAAAUCAYAAAAz84cVAAABgmlDQ1BJQ0MgcHJvZmlsZQAAKM+VkTlI
        A0EYhT9XRRElhVFELLZQC9FGRSxDFEVQkBjBq3B3Y6KQ3YTdBBtLwVaw8Gi8ChtrbS1sBUHwALEXrBRt
        JKz/JIEEIYIDw3y8mfeYeQPaUdKyvZoQ2E7GjYyH9bn5Bb3uFY0ArfTQYlheempmLErF8XVPlVrv+lQW
        /xtNsRXPgipdOGSl3YzwsvDQeiateE84aK0aMeFz4V5XLij8qHSzwG+KE3nWVGbQjUZGhIPCeqKMzTK2
        Vl1beFC4M2Y7kq/NFTimeEOxncxaxXuqFzauOLMzSpfZwTgTTDGNjkmWNZJk6JPVEcUjIvvhCv72vH9a
        XKa41rDEMUoKGyPvR/3B7269+EB/IakxDLUvvv/RBXU7kNv2/e9j38+dQPUzXDklf+oIhj9F3y5pnYcQ
        2ISL65Jm7sLlFrQ9pQ3XyEvVMrV4HN7P5JvmofkWGhYLvRX3OX2AqHQ1eQP7B9CdkOylCu+uL+/tzzPF
        /n4AvydyxcS6R3cAAAAJcEhZcwAADsEAAA7BAbiRa+0AAAAHdElNRQfpAg8XIwqYKYhWAAARrElEQVRo
        Q6Wb224cNxKG/TBBEkfS6DijOY9sLTYXgW0dbG+8V3mC2JZkSXaCvDoXXxW/JuUAu1jrgphuNlmsw1/F
        YnXPkz///LPc39+Xm5ub8unTp/Lly5fyxx9/lNu72+i7vb0td3d35e7O37vo49n19XXMoTkWWvxeV3o+
        o11dXZWPHz/Gs9u7u3LTzQva9/cxnnHSvr65Hnj7dHsb8+7uWKPx4Rryxlxo0N6//zCsTz/rf/jwYRjz
        8epjufl0E61fq6cd84KnthZ0aMol7ffv30ff58+fgx9poRfu0S/PGK+uHCdt6PGrXbjHHoy7uUm+mYed
        6Pvrr7+iQbvXxdd2U5av7dY/H3Td2U1ZQ5bgIfu1GS3GVb5jnUGXt2G3hh1t1HSJnFxfXVWbhI1yPfnV
        toz/mv//hTuu1QW2f/v2bXlCx+cvn4fFQ6D77EtF35Sr61Q0Ez8Bkg5EPZBYFDCnEFdJrwJKIDL2999/
        H4ynIhWQPuYxToaDh6sU1ucqwX7WbkLzrDkQtDCK68OzzwRZryTX6GWJdn0V8qAf9DUAvwMTv/QB7pCv
        8qnh6Rf4GmgwaKcHm3ypm7RTghE6zNfJ7j/fD+s6X8BotwasD9F62l6LA64jUF1fh0PTHJsgq3ze5DqO
        T6xw32gra+qoraOMzW4tkLAeuk2n+3bcEdzoY86vv/5aZrNZeRKL3NyU3377rVxcXJbz8/Py+vXr8u7f
        78IzuL+4uIg+2uXlRfSdnZ2Vs7Pz8vLly3J5mfNevno1zKe9efOmvP3X23j+6tWrGEtj7sVl0jy/uCiv
        zs6i/8XLF/ns4iJ+mWNjLfqhz/jz85z/5k3S51lrl0k35p3lc3io69D/4sWLB7xKm7HwLf8oymfnF1UX
        b16Hbob+qiP5kE7oCX6rXtQjdL8e14+x0ee4h/K1vrQD+jgPXb979y71+pXdYux52uzVq9QtazMXu/Vj
        kU35tFnY7fysXL6+HOiHHl++KC9fpi7t6xt26vnMdd6E3bBJk6npTl2oz8TYt+NOvP3yyy9lMpmUH374
        AeCnB/Hw+Pi4jMeTcnR0VObzeVksFmUynpTZdJaNvuUyno3H4xh3eHgY4/Ai+6CRtMYxdrlcxv3+/n7Z
        29uLfubwDEaYc3B4UPYP8jnj6If2zs5O2d3dLQcHBzEu2nhcjo+nZTabl81mU+asP5+X4+k0aNsOoXtw
        UKbTaVmtkgdoxrPDw1hvNp+Vk5OTMp3NYk3kgC8bvCsf82nQy+tpGR+Ny3Q6iz7GrtfreHZweFiOxugi
        eUGmkGHQ0Xjgl/HIiOzKOJ5MyqSux69rSo97fieT4+CTOfA/6BW7zZIv9IPduD46QvZcX7u4JrSgIR0a
        47QJY7+2NTLxDP5Tt5Oyv3+QdtvbSz0cVZknk+BhsViW9WYT9gu7dXKJKVrof7WMvsfgLrEyC16///77
        aE/MGfEYBNa4TFytV6m8WU5kodVqFc1FBYv3CJb9CTKVBSA0EP0xZ7kM5pgTa8xTCBiELoIwtleGBmY+
        jfk0aAdIOhmC7nQafchCc0zwGKCalNN/nIZMyfs0ZV+tkrfZNHhfrnJuGm4xAASl4jQ8Y/xmczLIBO1+
        vIDVOKmncdls1vF8d3evHBykjAAmxiPnfB6/81k6o7Kra3Wr84Uss6rTqmflcRzr6dzqCQdmTfTc0wrQ
        VH76YOD6NO0DXZxbWyXw07GQm7EDjeWy6qA5ubxow83JpiyWj8Md69Do+/HHH6M9IRcmT2JLxiMlxiLr
        zTrASMQIhc8xQjKuIhUGpXndA5F7QRFMVBCgCOnwa4QRFICGSMK46TT70gEyymR/grSBPkHNWJXY84E8
        8BFGAJDLZYw/OdmUZ89OynyeQAwZVho3eTdipoKTJgbmXt7om88XD4ARAOt2DA2fOksee70gX+xGNYrC
        J2Odr0w4Q9JqRtfQEbCq3WIudhvsipOkngV9XMeu0Pi0H3o01kNeMELE1iHC1ot5GU/YfVL38M498gl6
        HAC76fDaTdDHDld3BJ8nX7mrPwZ3yeMiMPX06U8J/Pt7Dlo3EfE1rMzhbVyvQpnpBD3YMuKxiIZMQwdw
        u8hL417DMG5vfy+ipSAJoMxS2a5xeHQYzB5XBUZUmE4DHKHcmjLp9TR3DOi4OxiBWAslQt/oBG1Afnr6
        PFIegCTP0EonzHUBDGtoIMGuzuRbPbJe6IVdZJGBQ3mWAbLc5XimgaBjOmjKp4y9U2tUdgvX5zl9AJ9r
        0gnu+x1b/k0VY7di/n+xW0bbdehx/+AgaBh9HzhPvU5bJaANUFyzmzGfsW1u2zG0l3zoNGLmW3GnLdDD
        9vZ2At8SGDk+jDFQQKBAiRqZJaRXKjTKc8t3cQHgtb9ED7ckhQEEKpNn/A6Ar/ygeNcH3KZECma6gsMw
        vhceOowB3EQ2Ijs5vnKyGwCi9Tp5AJjhjJXfnhZnh17JjpNX5aYBatbT0OGgITO/GDMjVa6ZuwpyoZvR
        7ijOCYIWMOmwkcp0ziVvOBKOLL9x5qg2VJbcsR7aTbv3vPd2y8BCqprBoAWb3LGCzrTyWfWdAaMD/yR3
        8ZQhaZvCGGR6u+GMzCVYPRZ34mM0GpWnT5+WJ5axOD1HelO9y8URxGgpsGSSLY8oqAAarmfOFoc6havR
        Zm9/PyIA9HsgSUM+EN7n5pL0CxDTEx3H+bTY+leroOEBDT7hbzw27wRAi5ryPItfHGDgfzYNhxnkq7uC
        PCprnBk6GTxsAVj1l/k6dNFtRvqgMyP1agf+mD/JnYrf2DFms+pc42GsDtPAkE7BWOaaRgEQd6h+fH8+
        UGcNMDlHe5visSORukQAqCmO+uidMOZWhzLN8Tp5yXOGaZM80AfY4dOiQOrz/8cd4z2fsOZPP9VUx9oq
        wJdQRve25Zs6mCMrQCrjIcMoOcBXla9SeCa9PEQBhgRqOFtsucfxi7JQah8pUlm5zbNupEG1n19AtFiy
        fjsAJrjHQV/gcvh8/vz5AyMpA88Zm9E+6ShLe1bzyBrJBvnr+cd0UJBF5QfgVgPDBy0AWsGPkXPH2ZST
        Zyc1+KCnlmqoB3PdNGwDMVWrdKIMFuoG/khZ+RU4QYc0p0sfIoLXs4Bj43mN4GnLlId1OPPAZ1Scqg7C
        Lh7Kqw6o8DBfR7DSZfBS1+6Inll4hp50gMfgzuDAPcCnPYkXCJ8+Re0zFZ2D3fKNsBovokdXleBawlZp
        hgNRBfPhYUbm3gsBvkyHsjuDyrSGUlFtm6wVkpqfpjNRPWkRlDHQI9oG38tFpADuCozhWuATQUKOVfIP
        kASxhlS5zqc/QBnO2lIAdxjz5oh2HPaI6lVXADSBVZ0URwsnWJfnp8/DEQABvAOAB+CvjticKxsgwm7Q
        Q0+xOxy3EqfAETQCKuxWixnID5/Mi2BTUy3tAT56u8ljOFt1OG3G+kRbznP28dwgp+5TJxnBBbN8W9F5
        DO6UGX6I9j9tbZUnvsGj2I9CU2GHYfjI3bptK+vnCbIQoHq1YFCRtPBUKiPk08eTMtrdjbRGUAtOjRaH
        oX7LtL5bAXUU1RwqA2nQGAcwq5IEZg98FYTxpBsH6Gkt1wLuqnhapCAPwNlKhTpl7wDQDDrrPPiRAkTf
        AodrlSgdgF0K+ugmzk81Og0yR2Vikc/ZdRctBdGgGJMA5c7EzpHORRo3CeAzF/lJiVhTx1XXodfqtCEr
        vzUVC7qrrNSgt53RKB2oy//TTnVnqXYLJ67OEOCf9FW4w1aerbtjc2JL0llBC3zheF35Vx19M+5qkYDf
        qOPzAstXwxxucwE8nYrJ0ZD2hIDdqXlgJrwqXyS0CEDkaszwzEOyed4Q5btDFc1tUAUL/FRgvggJMMFH
        VA1UektXBLLXQbemTPKskWz9LjClLl9TPvo2J5l6AI4AIw5Zd0UNEi9XFota9cgS7AN9dZUHaHKO0KEE
        vTrMlC0Nqu4HI1djEpiCVo2S2Az9YDd0QQUG3atX+YgqUgcqxsR7ghpoXDOjaF7jtABmWp1cPQ92Y+3K
        T/ASZ50GfEAfL0WHCllvtwZqU0ttz1hav15vw/8Hd8xlDfBHxP/uu+/yWx1yfCK+QIAw0YJJGNw6fi+w
        xoI5vU4mv77HyADISCOzjNOTGU8/ytJDGSPoreIk6DPShBPU9wGO9SBoXwrdXnhZO7c9BF1T5OAM9WUL
        95wNAC36YK76Yg1BZOXJXNcSqABnl5F25vLJQ7aWsxK1SHkyqtcKzSZr9NB1C9fIeeButgm7dc6p8Xu9
        JMDbwXCgVfkhetIMHMobGOnk4Zn20Z7aLQ6nkSpneZN10wkyCDDWNFj9izPXeCzuDFjM2drazqqOH1CZ
        46NAJkRNe5GfAVj71gBD3lSNzpyMFOSXFdSRN7YXOTDkXJWokgFU5LHW+LvPGnQWlOqnCyqRufnSrRnT
        aKvBjXbJe6u4GHWGcZNWSrNfkAh8fk9PT8s/f/554N0DOrlvvNzhLLFcDjriGVUIdiuCCXTQJ/3+Dobt
        ym+0Z8+fBYBZB3r8oqdMczKy4YjJW9LjjOD7AcZCF5oGCa7VFfZNJ6yRvzp5bzeeR0Dp3lNoO3SR56GH
        VTODAXOGzxlqypdlT+TNl32+LWb+YJs6Vz1ot2/FnTwyB9DzOUV8pMa3OnzM0y/ORBTvSV+BBQotDd5A
        koDK2iqMsBiLhhAVVCiCWqoOwHwjj+PpjxcdnaLJKYdDIs/jBVgCS741qNFWx7H86BiBwP1g0Do2gFJf
        OCVo227gfKokRF9fs4fC44zQUjd42t3bjegmePuxyErjftalCPEya5WOE2CvvPcyGUS41z7IEEBdr4K/
        kKFu/47RCQRm0237Hggw6ljIwDzWAby0HpDhNB2weBZ27YIG63C4hR8DmJ+FiAHtwb02127y/FjcyQ+p
        Tnyk5ieo5PgCaAAA0f4kPwKLPLbL8dzKQvm1KoGymOfbPe6fn54maPjsYJI1VZ67FopAUYJMZYXhuwMM
        BmEtHYVxkXtWYQWcoGMudDVK7l55cFJZvWJDeTG33yESDKxlxCCfJaoTWWmeW1B8fBPSvcDZ3tkZyq0C
        Ll4g1be1vVNZuoSGVZyBj/oeRH7oH4DSObN2g3Z8BFYjuADhuQ7FOPlwhwqgR0VvXZ7Vki9zWAub0UhR
        /IZK3pP/rmbepWA9wMWHZVadSrtFCbumwjqfRY7H4M4KERUoIn6kOn6zDPBVtIqNKkyXgyehjE6MMxcP
        JQKOrqJAusIvAvARGL+h+PpFn6f8qHjUWjX0U7DmFL0jBl+1sR4g4SUY/A2AqyAcImZUadonAQJAhVvx
        iUpMGKVVjcJoR+2FmeDNaJ3pIOBBJuTluVGcOfGip8qgwVhDGvAMTz2YbdAlx2dMnG26dwY6IxG4txkN
        ftFtRr902JS5RVadUV6wDevAXwSTmlJhN/Uan4l0LxsjbalvhpW3dwplGuxW9R3noxq0WJuGbNpW+oBU
        /dAegzt1RsFmiPh+3A/wfatFKkLju4at7e18w1pzNcpblIhYYGtrK353dkbDZ7WM5Xd7e6uMRjvDp7bM
        55px0GSunxyzjlspfbHGaFS2gsYo+3Z2ymi0G41Iyr1pE/O4pk9aXLMG1/0YeFA25aQPhZOa0C9fe3G/
        FXQcK580zx3MkR5fWP69r8o10N0bGmCSR/nHDqwpELnvZVQXocNKX/52RjuhN3Q0yBvrp5zKnnZL+wQf
        VZfyzD12y+f7sQ7r9XqTjrz3MvR98Mp8+6XHZ8usoxx8oqHeUqbkL+R+BO5YE2cA/MPXmX3EZwtgIB6E
        t2VNtJX68NbMnzKH4tqdIN4+1hId9x7CHM/hK1v7KM2xfhdjBPA6o3pGCM8A8pJRj2i1iXTMg2JGU15k
        ZC2833JDhm57lh+aFQw/W1AWIm88X+cbRPv6SEnj2o/ClIPGvXqg+TbSXYpnrp26yvu43qzjAAlPfEQX
        Mg4716LaI2UNW1UdOc7o2p+fkhdtkHK7S8lfz+/fbFYrZtpTe0Q67HmiRmvW5uAZBYBa3Ypds+JFu2mT
        xl+zm+eTx+COP7FQtWQnMeL/B2Se2r2cdV0hAAAAAElFTkSuQmCC
</value>
  </data>
</root>